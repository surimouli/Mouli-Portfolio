/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Model_Tech (https://sketchfab.com/Model_Tech)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-cartoon-character-f138b68562ae4669b2f7d317866e2c9e
Title: low poly cartoon character
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useMotionValue, useSpring } from "motion/react";
import { useFrame } from "@react-three/fiber";

export function Astronaut(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/models/low_poly_cartoon_character.glb");

  // Floating animation with spring
  const yPosition = useMotionValue(5);
  const ySpring = useSpring(yPosition);

  useEffect(() => {
    ySpring.set(-1);
  }, [ySpring]);

  useFrame(() => {
    const baseY = props.position?.[1] ?? 0;
    group.current.position.y = baseY + ySpring.get();
  });


  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      rotation={[-Math.PI / 0.071, -0.3, 0.03]}
      scale={props.scale || 0.1}
      position={props.position || [1.3, 2, 0]}
    >
      
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material001_0.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_1.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_2.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_3.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_4.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_5.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_6.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_7.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_8.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_9.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_10.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_11.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_12.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_13.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_14.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_15.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_16.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_17.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lip_Material_0_18.geometry}
            material={materials.Material}
          />

    </group>
  );
}

useGLTF.preload("/models/low_poly_cartoon_character.glb");
export default Astronaut;